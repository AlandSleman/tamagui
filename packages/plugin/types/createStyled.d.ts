import { GetProps, GetVariantValues, StylableComponent, StyledContext, TamaguiComponent, VariantDefinitions, VariantSpreadFunction } from '@tamagui/core';
type GetVariantAcceptedValues<V> = V extends Object ? {
    [Key in keyof V]?: V[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof V[Key]>;
} : undefined;
export declare const createStyled: (plugins: any) => <ParentComponent extends StylableComponent, Variants extends void | VariantDefinitions<ParentComponent> = void | VariantDefinitions<ParentComponent>>(Component: ParentComponent, options: GetProps<ParentComponent> & {
    name?: string | undefined;
    variants?: Variants | undefined;
    defaultVariants?: GetVariantAcceptedValues<Variants> | undefined;
    context?: StyledContext | undefined;
    acceptsClassName?: boolean | undefined;
}) => TamaguiComponent<GetProps<ParentComponent> | (import("@tamagui/core").VariantDefinitionFromProps<GetProps<ParentComponent>, any> extends infer T ? T extends import("@tamagui/core").VariantDefinitionFromProps<GetProps<ParentComponent>, any> ? T extends void ? GetProps<ParentComponent> : (ParentComponent extends TamaguiComponent<any, any, infer P> ? P : GetProps<ParentComponent>) & Omit<ParentComponent extends TamaguiComponent<any, any, any, infer V> ? V : {}, keyof (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined)> & (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined) & import("@tamagui/core").PseudoProps<Partial<(ParentComponent extends TamaguiComponent<any, any, infer P> ? P : GetProps<ParentComponent>) & Omit<ParentComponent extends TamaguiComponent<any, any, any, infer V> ? V : {}, keyof (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined)> & (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined)>> & import("@tamagui/core").MediaProps<Partial<(ParentComponent extends TamaguiComponent<any, any, infer P> ? P : GetProps<ParentComponent>) & Omit<ParentComponent extends TamaguiComponent<any, any, any, infer V> ? V : {}, keyof (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined)> & (T extends void ? {} : T extends Object ? { [Key in keyof T]?: (T[Key] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T[Key]>) | undefined; } : undefined)>> : never : never), import("@tamagui/core").GetRef<ParentComponent>, ParentComponent extends TamaguiComponent<any, any, infer P> ? P : GetProps<ParentComponent>, (ParentComponent extends TamaguiComponent<any, any, any, infer V> ? V : {}) & ({} | (import("@tamagui/core").VariantDefinitionFromProps<GetProps<ParentComponent>, any> extends infer T_1 ? T_1 extends import("@tamagui/core").VariantDefinitionFromProps<GetProps<ParentComponent>, any> ? T_1 extends void ? {} : T_1 extends Object ? { [Key_1 in keyof T_1]?: (T_1[Key_1] extends VariantSpreadFunction<any, infer Val> ? Val : GetVariantValues<keyof T_1[Key_1]>) | undefined; } : undefined : never : never)), { [Key_2 in Exclude<keyof ParentComponent, "propTypes" | "defaultProps" | "staticConfig" | "extractable" | "styleable" | "$$typeof">]: ParentComponent[Key_2]; }>;
export {};
//# sourceMappingURL=createStyled.d.ts.map